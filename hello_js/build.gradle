apply plugin: 'kotlin2js'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-js-library:$kotlin_version"
    compile project(":hello_shared")
    compile project(path: ':hello_java')
}

sourceSets.main.kotlin.srcDirs += '../hello_shared/src/main'

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.sourceMap = true
    kotlinOptions.outputFile = "web/js/hello_js.js"
    kotlinOptions.suppressWarnings = true
    kotlinOptions.verbose = true
}

jar.dependsOn(compileKotlin2Js)

def output_dir = "web/js"

task copyJsFilesFromDependencies(dependsOn: build) {
    try {
        //copy all necessary .js files
        configurations.compile.each { File file ->
            copy {
                includeEmptyDirs = true
                println("cmp: ${file.absolutePath}")
                from zipTree(file.absolutePath)
                into "$output_dir"
                include { fileTreeElement ->
                    def path = fileTreeElement.path
                    def include = path.endsWith(".js") && (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/"))
                    if (include) println("unziping $path")
                    return include
                }
            }
        }
    } catch (Exception e) {
        System.err.println(e.getMessage())
    }
}

clean.doFirst() {
    delete "$output_dir"
}